{"remainingRequest":"/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/node_modules/babel-loader/lib/index.js!/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/src/views/FormClient.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/src/views/FormClient.vue","mtime":1588356996023},{"path":"/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/cruzbadllo/Documents/proyects/Rest-Spring-Vuejs/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9ob21lL2NydXpiYWRsbG8vRG9jdW1lbnRzL3Byb3llY3RzL1Jlc3QtU3ByaW5nLVZ1ZWpzL2Zyb250LWVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCc7CmltcG9ydCBDbGllbnQgZnJvbSAnLi4vZW50aXRpZXMvQ2xpZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGb3JtQ2xpZW50JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgLy8gZW5kIGRhdGEKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydjbGllbnQnLCAnZ2V0Q2xpZW50J10pKSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWydmaW5kQ2xpZW50QnlJZCcsICdzYXZlQ2xpZW50JywgJ3VwZGF0ZUNsaWVudCddKSksIHt9LCB7CiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKCkgewogICAgICB2YXIgY2xpZW50Rm9ybSA9IG5ldyBDbGllbnQoKTsKICAgICAgY2xpZW50Rm9ybS5pZENsaWVudCA9IHRoaXMuY2xpZW50LmlkQ2xpZW50OwogICAgICBjbGllbnRGb3JtLm5hbWUgPSB0aGlzLmNsaWVudC5uYW1lOwogICAgICBjbGllbnRGb3JtLmVtYWlsID0gdGhpcy5jbGllbnQuZW1haWw7CiAgICAgIGNsaWVudEZvcm0uYWdlID0gdGhpcy5jbGllbnQuYWdlOwogICAgICBjbGllbnRGb3JtLmdlbnJlID0gdGhpcy5jbGllbnQuZ2VucmU7CgogICAgICBpZiAoY2xpZW50Rm9ybS5pZENsaWVudCA9PSB1bmRlZmluZWQpIHsKICAgICAgICB0aGlzLnNhdmVDbGllbnQoY2xpZW50Rm9ybSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy51cGRhdGVDbGllbnQoY2xpZW50Rm9ybSk7CiAgICAgIH0gLy9jb25zb2xlLmxvZyhjbGllbnRGb3JtKTsKCiAgICB9CiAgfSksCiAgLy8gZW5kIG1ldGhvZHMKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5maW5kQ2xpZW50QnlJZCh0aGlzLiRyb3V0ZS5wYXJhbXMuaWQpOwogIH0KfTsgLy8gZW5kIGV4cG9ydA=="},{"version":3,"sources":["FormClient.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,MAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA,EAAA;AAEA,GALA;AAKA;AACA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,QAAA,EAAA,WAAA,CAAA,CADA,CANA;AASA,EAAA,OAAA,kCACA,UAAA,CAAA,CAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,CAAA,CADA;AAEA,IAAA,IAFA,kBAEA;AACA,UAAA,UAAA,GAAA,IAAA,MAAA,EAAA;AACA,MAAA,UAAA,CAAA,QAAA,GAAA,KAAA,MAAA,CAAA,QAAA;AACA,MAAA,UAAA,CAAA,IAAA,GAAA,KAAA,MAAA,CAAA,IAAA;AACA,MAAA,UAAA,CAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA;AACA,MAAA,UAAA,CAAA,GAAA,GAAA,KAAA,MAAA,CAAA,GAAA;AACA,MAAA,UAAA,CAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA;;AAEA,UAAA,UAAA,CAAA,QAAA,IAAA,SAAA,EAAA;AACA,aAAA,UAAA,CAAA,UAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,CAAA,UAAA;AACA,OAZA,CAaA;;AACA;AAhBA,IATA;AA0BA;AACA,EAAA,OA3BA,qBA2BA;AACA,SAAA,cAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA;AA7BA,CAAA,C,CA8BA","sourcesContent":["<template>\n    <div class=\"container form-client\">\n        <h1 class=\"text-center mt-4\">Add new client</h1>\n\n        <router-link to=\"/\" class=\"breadcrumb mt-5\">Back to clients list</router-link>\n        \n        <!-- Form -->\n        <form v-on:submit.prevent=\"save\" >\n            <input type=\"hidden\" v-model=\"client.idClient\">\n            \n            <!-- Name -->\n            <!-- {{client.name}} -->\n            <div class=\"form-group\">\n                <label for=\"name-user\">FullName client</label>\n                <input type=\"text\" v-model=\"client.name\" class=\"form-control\" id=\"name-user\" aria-describedby=\"emailHelp\">\n            </div>\n\n            <!-- Email -->\n            <!-- {{client.email}} -->\n            <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" class=\"form-control\" id=\"email\" v-model=\"client.email\">\n            </div>\n\n            <!-- Age -->\n            <!-- {{client.age}} -->\n            <div class=\"form-group\">\n                <label for=\"age\">Age</label>\n                <input type=\"text\" class=\"form-control\" id=\"age\" v-model=\"client.age\">\n            </div>\n\n            <!-- Genre -->\n            <!-- {{client.genre}} -->\n            <div class=\"form-group\">\n                <label for=\"genre\">Select your genre</label>\n                <select class=\"form-control\" id=\"genre\" v-model=\"client.genre\">\n                    <option value=\"0\">Famale</option>\n                    <option value=\"1\">Male</option>\n                </select>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" >Save client</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport { mapState, mapActions } from 'vuex';\n    import Client from '../entities/Client'\n\n    export default {\n        name: 'FormClient',\n        data(){\n            return {\n            }\n        }, // end data\n        computed:{\n            ...mapState(['client', 'getClient'])\n        },\n        methods:{ // here will execute an actions that connect to backend\n            ...mapActions(['findClientById', 'saveClient', 'updateClient']),\n            save(){\n                const clientForm = new Client();\n                clientForm.idClient = this.client.idClient;\n                clientForm.name=this.client.name;\n                clientForm.email=this.client.email;\n                clientForm.age=this.client.age;\n                clientForm.genre=this.client.genre;\n                \n                if(clientForm.idClient == undefined){\n                    this.saveClient(clientForm);\n                }else{\n                    this.updateClient(clientForm);\n                }\n                //console.log(clientForm);\n            }\n        }, // end methods\n        created(){\n            this.findClientById(this.$route.params.id);\n        }\n    } // end export\n</script>"],"sourceRoot":"src/views"}]}